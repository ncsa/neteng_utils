---
- name: Update Netbox with Ubuntu OS version
  hosts: platforms_ubuntu
  gather_facts: yes
  vars:
    netbox_api_url: "<NETOBOX_URL>"
    netbox_token: "<NETBOX_TOKEN>"

  tasks:
    - name: Set OS version fact
      set_fact:
        os_version: "{{ ansible_distribution_version }}"

    - name: Look up host in Netbox as device
      uri:
        url: "{{ netbox_api_url }}/dcim/devices/?name={{ inventory_hostname }}"
        method: GET
        headers:
          Authorization: "Token {{ netbox_token }}"
          Content-Type: "application/json"
      register: device_lookup
      failed_when: false

    - name: If found as device, set Netbox ID and type
      set_fact:
        netbox_id: "{{ device_lookup.json.results[0].id }}"
        netbox_object_type: "device"
      when: device_lookup.json.results | length > 0

    - name: Look up host in Netbox as virtual machine if not found as device
      uri:
        url: "{{ netbox_api_url }}/virtualization/virtual-machines/?name={{ inventory_hostname }}"
        method: GET
        headers:
          Authorization: "Token {{ netbox_token }}"
          Content-Type: "application/json"
      register: vm_lookup
      when: device_lookup.json.results | length == 0
      failed_when: false

    - name: If found as virtual machine, set Netbox ID and type
      set_fact:
        netbox_id: "{{ vm_lookup.json.results[0].id }}"
        netbox_object_type: "virtual_machine"
      when: (device_lookup.json.results | length == 0) and (vm_lookup.json.results | length > 0)

    - name: Fail if host not found in Netbox
      fail:
        msg: "Host {{ inventory_hostname }} not found in Netbox as device or virtual machine."
      when: (device_lookup.json.results | length == 0) and ( (vm_lookup is not defined) or (vm_lookup.json.results | length == 0) )

    - name: Update OS version for device in Netbox
      uri:
        url: "{{ netbox_api_url }}/dcim/devices/{{ netbox_id }}/"
        method: PATCH
        headers:
          Authorization: "Token {{ netbox_token }}"
          Content-Type: "application/json"
        body: |
          {
            "custom_fields": {
              "os_version": "{{ os_version }}"
            }
          }
        body_format: json
        status_code: [200,202]
      when: netbox_object_type == "device"

    - name: Update OS version for virtual machine in Netbox
      uri:
        url: "{{ netbox_api_url }}/virtualization/virtual-machines/{{ netbox_id }}/"
        method: PATCH
        headers:
          Authorization: "Token {{ netbox_token }}"
          Content-Type: "application/json"
        body: |
          {
            "custom_fields": {
              "os_version": "{{ os_version }}"
            }
          }
        body_format: json
        status_code: [200,202]
      when: netbox_object_type == "virtual_machine"
